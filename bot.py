import os
import logging
import requests
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackContext, MessageHandler, filters, CallbackQueryHandler

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
FATSECRET_API_KEY = os.getenv("FATSECRET_API_KEY")
FATSECRET_API_SECRET = os.getenv("FATSECRET_API_SECRET")


def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [[InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –±–ª—é–¥", callback_data='list'),
                 InlineKeyboardButton("üìä –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –º–µ–Ω—é", callback_data='menu')],
                [InlineKeyboardButton("üèãÔ∏è –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", callback_data='workout')],
                [InlineKeyboardButton("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ—Ç—á—ë—Ç—ã", callback_data='progress')],
                [InlineKeyboardButton("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data='reminders')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=reply_markup
    )


def button_handler(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    query.answer()
    
    if query.data == 'list':
        query.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –±–ª—é–¥! –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.")
        context.user_data['waiting_for_preferences'] = True
    elif query.data == 'menu':
        query.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –º–µ–Ω—é! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–∞—à–µ–≥–æ –ø–∏—Ç–∞–Ω–∏—è.")
    elif query.data == 'workout':
        query.edit_message_text(
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫! –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–≤–æ–∑—Ä–∞—Å—Ç, –≤–µ—Å, —Ä–æ—Å—Ç, —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏) –∏ —Ü–µ–ª—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã, –ø–æ—Ö—É–¥–µ–Ω–∏–µ, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã)."
        )
        context.user_data['waiting_for_workout'] = True
    elif query.data == 'progress':
        query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å: –ø—Ä–æ–≥—Ä–µ—Å—Å –≤–µ—Å–∞, –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é.")
    elif query.data == 'reminders':
        query.edit_message_text("–ù–∞—Å—Ç—Ä–æ–∏–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è! –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏—ë–º–∞—Ö –ø–∏—â–∏, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –∏–ª–∏ –ø–æ–∫—É–ø–∫–∞—Ö?")


def handle_preferences(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏–∑ FatSecret API."""
    if context.user_data.get('waiting_for_preferences'):
        user_input = update.message.text
        context.user_data['preferences'] = user_input
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º
        food_list = search_food(user_input)
        
        if food_list:
            response_text = "–í–æ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º:\n" + "\n".join(food_list)
            # –†–∞—Å—Å—á–∏—Ç–∞–µ–º –∫–∞–ª–æ—Ä–∏–∏ –∏ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç—ã
            nutrition_info = get_nutrition_info(food_list)
            response_text += "\n\n–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:\n" + nutrition_info
        else:
            response_text = "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."
        
        update.message.reply_text(response_text)
        context.user_data['waiting_for_preferences'] = False


def handle_workout(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫."""
    if context.user_data.get('waiting_for_workout'):
        user_input = update.message.text
        context.user_data['workout_params'] = user_input
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
        workout_plan = generate_workout_plan(user_input)
        
        update.message.reply_text("–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:\n" + workout_plan)
        context.user_data['waiting_for_workout'] = False


def generate_workout_plan(user_input):
    """–°–æ–∑–¥–∞—ë—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞
    if "–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã" in user_input.lower():
        return "- –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 4-5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é\n- –£–ø–æ—Ä –Ω–∞ –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–ø—Ä–∏—Å–µ–¥, –∂–∏–º, —Å—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞)\n- –í—ã—Å–æ–∫–æ–∫–∞–ª–æ—Ä–∏–π–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"
    elif "–ø–æ—Ö—É–¥–µ–Ω–∏–µ" in user_input.lower():
        return "- –ö–∞—Ä–¥–∏–æ 3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n- –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n- –î–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤"
    else:
        return "- –°–º–µ—à–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º: 3-4 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é\n- –ë–∞–ª–∞–Ω—Å —Å–∏–ª–æ–≤—ã—Ö –∏ –∫–∞—Ä–¥–∏–æ –Ω–∞–≥—Ä—É–∑–æ–∫\n- –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –±–µ–∑ —Å—Ç—Ä–æ–≥–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"


# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
app = Application.builder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_preferences))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_workout))

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
